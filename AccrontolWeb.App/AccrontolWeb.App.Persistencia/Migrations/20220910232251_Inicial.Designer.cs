// <auto-generated />
using System;
using AccrontolWeb.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccrontolWeb.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220910232251_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Administracion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Trabajadorid")
                        .HasColumnType("int");

                    b.Property<string>("descripcionAdm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Trabajadorid");

                    b.ToTable("Administracion");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Area", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("area")
                        .HasColumnType("int");

                    b.Property<string>("descripcionArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.RegistroHora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Trabajadorid")
                        .HasColumnType("int");

                    b.Property<string>("descripcionHh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaFinal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaInicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Trabajadorid");

                    b.ToTable("RegistroHora");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Sede", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Empresaid")
                        .HasColumnType("int");

                    b.Property<string>("ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreSede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Empresaid");

                    b.ToTable("Sede");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.SuperAdminTrabajador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Administracionid")
                        .HasColumnType("int");

                    b.Property<int?>("Supervisorid")
                        .HasColumnType("int");

                    b.Property<int>("Trabajadorid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Administracionid");

                    b.HasIndex("Supervisorid");

                    b.HasIndex("Trabajadorid");

                    b.ToTable("SuperAdminTrabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Supervisor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Trabajadorid")
                        .HasColumnType("int");

                    b.Property<string>("descripcionSpr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Trabajadorid");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Trabajador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("Areaid")
                        .HasColumnType("int");

                    b.Property<int>("Sedeid")
                        .HasColumnType("int");

                    b.Property<int>("active")
                        .HasColumnType("int");

                    b.Property<string>("identificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Areaid");

                    b.HasIndex("Sedeid");

                    b.ToTable("Trabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Administracion", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("Trabajadorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.RegistroHora", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("Trabajadorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Sede", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("Empresaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.SuperAdminTrabajador", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Administracion", "Administracion")
                        .WithMany()
                        .HasForeignKey("Administracionid");

                    b.HasOne("AccrontolWeb.App.Dominio.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("Supervisorid");

                    b.HasOne("AccrontolWeb.App.Dominio.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("Trabajadorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administracion");

                    b.Navigation("Supervisor");

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Supervisor", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Trabajador", "Trabajador")
                        .WithMany()
                        .HasForeignKey("Trabajadorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trabajador");
                });

            modelBuilder.Entity("AccrontolWeb.App.Dominio.Trabajador", b =>
                {
                    b.HasOne("AccrontolWeb.App.Dominio.Area", "Area")
                        .WithMany()
                        .HasForeignKey("Areaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AccrontolWeb.App.Dominio.Sede", "Sede")
                        .WithMany()
                        .HasForeignKey("Sedeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Sede");
                });
#pragma warning restore 612, 618
        }
    }
}
